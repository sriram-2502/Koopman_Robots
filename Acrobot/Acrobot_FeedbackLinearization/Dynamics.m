function zdot = Dynamics( t,z,p )
%FULDYNLQR Full dynamics for the double pendulum. Uses autogenerated Thdotdot1
%and 2. This function also adds torque feedback for balance. Should not be
%used except when the system is in balance phase, not swing-up phase.

th1 = z(1);
th2 = z(3);
thdot1 = z(2);
thdot2 = z(4);

if strcmp(p.controller, 'noncollocated')
    % Linearized link 1
    th1d = p.target;
    T = ControlTorque1(p.I1,p.I2,p.d1,p.d2,p.g,p.kd1,p.kp1,p.l1,p.m1,p.m2,th1,th2,th1d,thdot1,thdot2);
elseif strcmp(p.controller, 'collocated')
    % Linearized link 2
    th2d = p.alpha*atan(thdot1);
    T = ControlTorque2(p.I1,p.I2,p.d1,p.d2,p.g,p.kd2,p.kp2,p.l1,p.m1,p.m2,th1,th2,th2d,thdot1,thdot2);
else % No controller
   T = 0; 
end

% Actuator saturation, clamp torque if outside max.
if T>p.sat
    T = p.sat;
elseif T<-p.sat;
    T = p.sat;
end

%Use the autoderived functions for the accelerations.
thdotdot1 = Thdotdot1(p.I1,p.I2,p.T1,T,p.d1,p.d2,p.g,p.l1,p.m1,p.m2,th1,th2,thdot1,thdot2);
thdotdot2 = Thdotdot2(p.I1,p.I2,p.T1,T,p.d1,p.d2,p.g,p.l1,p.m1,p.m2,th1,th2,thdot1,thdot2);

%Assemble the state vector derivatives.
zdot = [thdot1
    thdotdot1
    thdot2
    thdotdot2
    ];

end

